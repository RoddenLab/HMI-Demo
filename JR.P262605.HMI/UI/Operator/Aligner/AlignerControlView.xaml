<UserControl x:Class="JR.P262605.HMI.UI.Operator.Aligner.AlignerControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:JR.P262605.HMI.UI.Operator.Aligner"
             xmlns:c="clr-namespace:JR.P262605.HMI.UI.Convert"
             mc:Ignorable="d" 
             d:DesignHeight="800" 
             d:DesignWidth="1024"
             d:DataContext="{d:DesignInstance Type=local:AlignerControlViewModel}"
             d:Background="White">

    <UserControl.Resources>
        <c:WaferSizeToString x:Key="WaferSizeToString" />
        <c:WaferNotchToString x:Key="WaferNotchToString"/>

        <Style TargetType="TextBlock" x:Key="ButtonText">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="Width" Value="100"/>
        </Style>

        <Style TargetType="ToggleButton" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="Width" Value="100"/>
        </Style>


        <Style TargetType="ToggleButton" x:Key="ConfigButton" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="WhiteSmoke" />
            <Setter Property="Width" Value="Auto" />
            <Style.Triggers>
                <Trigger Property="AllowDrop" Value="True">
                    <Setter Property="Background" Value="CornflowerBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="Label" x:Key="BusyIndicator" BasedOn="{StaticResource BaseLabel}">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="DimGray"/>
            <Style.Triggers>
                <Trigger Property="AllowDrop" Value="True">
                    <Setter Property="Background" Value="Yellow"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="225"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <GroupBox Grid.Row="0" Grid.Column="0">
            <GroupBox.Header>
                <TextBlock Text="Aligner Status" FontSize="18"/>
            </GroupBox.Header>

            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource LineItem}" Text="Unable to Move"/>
                <Rectangle Grid.Row="0" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.UnableToMove}"/>

                <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource LineItem}" Text="Command Error"/>
                <Rectangle Grid.Row="1" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.CommandError}"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource LineItem}" Text="Chuck Vacuum Sensor"/>
                <Rectangle Grid.Row="2" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.ChuckVacuumSensor}"/>

                <TextBlock Grid.Row="3" Grid.Column="0" Style="{StaticResource LineItem}" Text="Chuck Vacuum Switch"/>
                <Rectangle Grid.Row="3" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.ChuckVacuumSwitch}"/>

                <TextBlock Grid.Row="4" Grid.Column="0" Style="{StaticResource LineItem}" Text="Motion Error"/>
                <Rectangle Grid.Row="4" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.MotionError}"/>

                <TextBlock Grid.Row="5" Grid.Column="0" Style="{StaticResource LineItem}" Text="Software Limit"/>
                <Rectangle Grid.Row="5" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.MotionLimitsViolation}"/>

                <TextBlock Grid.Row="6" Grid.Column="0" Style="{StaticResource LineItem}" Text="Not Homed"/>
                <Rectangle Grid.Row="6" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.NotHomed}"/>

                <TextBlock Grid.Row="7" Grid.Column="0" Style="{StaticResource LineItem}" Text="Macro Running"/>
                <Rectangle Grid.Row="7" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.MacroRunning}"/>

                <TextBlock Grid.Row="8" Grid.Column="0" Style="{StaticResource LineItem}" Text="In Motion"/>
                <Rectangle Grid.Row="8" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.MotionInProgress}"/>

                <TextBlock Grid.Row="9" Grid.Column="0" Style="{StaticResource LineItem}" Text="Servo Off"/>
                <Rectangle Grid.Row="9" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.ServoOff}"/>

                <TextBlock Grid.Row="10" Grid.Column="0" Style="{StaticResource LineItem}" Text="Pins Vacuum Switch"/>
                <Rectangle Grid.Row="10" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.PinsVacuumSwitch}"/>

                <TextBlock Grid.Row="11" Grid.Column="0" Style="{StaticResource LineItem}" Text="File Error"/>
                <Rectangle Grid.Row="11" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.FileError}"/>

                <Label Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource BusyIndicator}"
                       AllowDrop="{Binding Model.hoAlignerBusy}">
                    <TextBlock Text="Aligner Busy"/>
                </Label>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="2" Grid.Column="0">
            <GroupBox.Header>
                <TextBlock Text="Aligner Interface" FontSize="18"/>
            </GroupBox.Header>

            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource LineItem}" Text="API Heartbeat"/>
                <TextBox Grid.Row="0" Grid.Column="2" IsReadOnly="True" 
                         Text="{Binding Model.APIOut.HeartbeatEcho}"/>

                <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource LineItem}" Text="Robot Connected"/>
                <Rectangle Grid.Row="1" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.Connected}"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource LineItem}" Text="Start Ack OK"/>
                <Rectangle Grid.Row="2" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.StartAckOK}"/>

                <TextBlock Grid.Row="3" Grid.Column="0" Style="{StaticResource LineItem}" Text="Start Ack NOK"/>
                <Rectangle Grid.Row="3" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.StartAckNOK}"/>

                <TextBlock Grid.Row="4" Grid.Column="0" Style="{StaticResource LineItem}" Text="Done"/>
                <Rectangle Grid.Row="4" Grid.Column="2" Style="{StaticResource OnLight}"
                           DataContext="{Binding Model.APIOut.Done}"/>

                <TextBlock Grid.Row="5" Grid.Column="0" Style="{StaticResource LineItem}" Text="Error"/>
                <TextBox Grid.Row="5" Grid.Column="2" IsReadOnly="True"
                         Text="{Binding Model.APIOut.Error}"/>

                <Button Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Width="Auto"
                        Command="{Binding ResetAPICommand}">
                    <TextBlock Text="Reset API" Style="{StaticResource ButtonText}"/>
                </Button>
            </Grid>

        </GroupBox>
        
        <GroupBox Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="3">
            <GroupBox.Header>
                <TextBlock Text="Manual Controls" FontSize="18"/>
            </GroupBox.Header>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Row="0" Grid.Column="0" Width="150"
                            IsEnabled="{Binding Model.hoManualMode}"
                            Command="{Binding PollStatusCommand}">
                        <TextBlock Text="Status" Style="{StaticResource ButtonText}"/>
                    </Button>

                    <Button Grid.Row="0" Grid.Column="2" Width="150"
                            IsEnabled="{Binding Model.hoManualMode}"
                            Command="{Binding ServoOnCommand}">
                        <TextBlock Text="ServoOn" Style="{StaticResource ButtonText}"/>
                    </Button>
                </Grid>


                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Row="0" Grid.Column="0" Width="150"
                            IsEnabled="{Binding Model.hoManualMode}"
                            Command="{Binding HomeCommand}">
                        <TextBlock Text="Home" Style="{StaticResource ButtonText}"/>
                    </Button>

                    <Button Grid.Row="0" Grid.Column="2" Width="150"
                            IsEnabled="{Binding Model.hoManualMode}"
                            Command="{Binding AlignWaferCommand}">
                        <TextBlock Text="Align Wafer" Style="{StaticResource ButtonText}"/>
                    </Button>
                </Grid>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="2" Grid.Column="2">
            <GroupBox.Header>
                <TextBlock Text="Equipment Settings" FontSize="18"/>
            </GroupBox.Header>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>

            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="2" Grid.Column="4">
            <GroupBox.Header>
                <TextBlock Text="Current Wafer" FontSize="18"/>
            </GroupBox.Header>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>


                <DockPanel Grid.Row="0" Grid.Column="0" LastChildFill="False">
                    <TextBox DockPanel.Dock="Bottom" Height="30" VerticalContentAlignment="Center" IsReadOnly="True"
                             Text="{Binding Model.Wafer.CarrierID}"/>
                    <TextBlock DockPanel.Dock="Bottom" Text="Carrier ID" FontSize="14"/>
                </DockPanel>

                <DockPanel Grid.Row="0" Grid.Column="2" LastChildFill="False">
                    <TextBox DockPanel.Dock="Bottom" Height="30" VerticalContentAlignment="Center" IsReadOnly="True"
                             Text="{Binding Model.Wafer.Notch, Converter={StaticResource WaferNotchToString}}"/>
                    <TextBlock DockPanel.Dock="Bottom" Text="Notch Style" FontSize="14"/>
                </DockPanel>

                <DockPanel Grid.Row="0" Grid.Column="4" LastChildFill="False">
                    <TextBox DockPanel.Dock="Bottom" Height="30" VerticalContentAlignment="Center" IsReadOnly="True"
                             Text="{Binding Model.Wafer.Size, Converter={StaticResource WaferSizeToString}}"/>
                    <TextBlock DockPanel.Dock="Bottom" Text="Size" FontSize="14"/>
                </DockPanel>

                <DockPanel Grid.Row="2" Grid.Column="0" LastChildFill="False" VerticalAlignment="Center">
                    <TextBlock DockPanel.Dock="Top" Style="{StaticResource ButtonText}"
                           Text="Wafer Present"/>
                    <Rectangle DockPanel.Dock="Top" 
                           Style="{StaticResource OnLight}"
                           AllowDrop="{Binding Model.hoWaferPresent}"/>
                </DockPanel>

                <Button Grid.Row="2" Grid.Column="4"
                            IsEnabled="{Binding Model.hoWaferPresent}"
                            Command="{Binding RemoveWaferCommand}">
                    <TextBlock Text="Remove Wafer" Style="{StaticResource ButtonText}"/>
                </Button>

            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
